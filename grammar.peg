Expression = Workflow

Workflow = Space? NewLine* Space? s:StateDefinition+ Space? NewLine* Space? {
	return s
}

StateDefinition = Space? s:Name ":" NewLine+ t:Transition+ {
	return { state: s, transitions: t }
}

Transition =
	Space? t:Name Space?
	Arrow?
	Space? s:Name? Space?
	Arrow?
	Space? a:Name?
	NewLine+ { return { trigger: t, nextState: s, afterTransition: a } }

Name = w1:Word w2:(s:Space+ w:Word { return s.join(' ') + w })? {
	return w2 ? w1 + w2 : w1
}
Word = w:[A-z!]+ { return w.join('') }
Space = [ \t]+
NewLine = "\n"
Arrow = "->"